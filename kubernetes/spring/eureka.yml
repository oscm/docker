apiVersion: v1
kind: Service
metadata:
  name: spring-cloud-eureka-server
  namespace: default
  labels:
    app: springboot
spec:
  selector:
    app: spring-cloud-eureka-server
  type: NodePort
  ports: 
  - name: http
    protocol: TCP 
    port: 8761
    targetPort: 8761
  clusterIP: 10.10.0.3
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: spring-cloud-eureka-server
  labels:
    app: spring-cloud-eureka-server
data:
  application.properties: |-
    server.port=8761

    spring.application.name=netflix-eureka-server
    # spring.profiles.active=dev

    spring.security.basic.enabled=true
    spring.security.user.name=eureka
    spring.security.user.password=s3cr3t

    ribbon.eureka.enabled=false

    eureka.server.enable-self-preservation=true
    eureka.instance.hostname=localhost
    eureka.instance.leaseExpirationDurationInSeconds=2
    eureka.client.register-with-eureka=false
    eureka.client.fetch-registry=false
    eureka.client.serviceUrl.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/
    #eureka.client.serviceUrl.defaultZone=http://localhost:${server.port}/eureka/
    #eureka.client.serviceUrl.defaultZone=http://${spring.security.user.name}:${spring.security.user.password}@${eureka.instance.hostname}:${server.port}/eureka/
    #eureka.client.serviceUrl.defaultZone=https://${eureka.instance.hostname}:${server.port}/eureka/
    eureka.client.RegistryFetchIntervalSeconds=10


    eureka.server.enableSelfPreservation=false
    eureka.server.evictionIntervalTimerInMs=5000
    eureka.server.leaseRenewalIntervalInSeconds=5
    eureka.server.leaseExpirationDurationInSeconds=10
    eureka.server.useReadOnlyResponseCache=false

    logging.level.com.netflix.eureka=OFF
    logging.level.com.netflix.discovery=OFF
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-cloud-eureka-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-cloud-eureka-server
  template:
    metadata:
      labels:
        app: spring-cloud-eureka-server
    spec:
      containers: 
      - name: spring-cloud-eureka-server
        #image: netkiller/eureka:latest
        #image: 127.0.0.1:5000/netkiller/eureka:latest
        image: registry.netkiller.cn:5000/netkiller/eureka:latest
        ports:
        - containerPort: 8761
        # resources:
        #   limits:
        #     cpu: 2000m
        #     memory: 2Gi
        #   requests:
        #     cpu: 1000m
        #     memory: 1Gi
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8761
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 12
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8761
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 12
        env:
        - name: JAVA_OPTS
          value: -server -Xms128m -Xmx512m
        #   valueFrom:
        #     resourceFieldRef:
        #       resource: limits.memory
        #       divisor: 1Mi
        # - name: JAVA_OPTS
        #   value: -server -Xms512m -Xmx4096m -Duser.timezone="Asia/Shanghai" -Djava.security.egd=file:/dev/./urandom
        - name: SPRING_OPTS
          value: --spring.config.location=/srv/application.properties
        volumeMounts:
        - name: config
          mountPath:  /srv/application.properties
          subPath: application.properties
        # - name: logfile
        #   mountPath: /tmp          
      volumes:
      # - name: logfile
      #   emptyDir: {} 
      - name: config
        configMap:
          name: spring-cloud-eureka-server
      imagePullSecrets:
        - name: docker-hub