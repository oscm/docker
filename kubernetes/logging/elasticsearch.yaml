apiVersion: apps/v1
# kind: ReplicationController
# kind: Deployment
kind: StatefulSet
metadata:
  name: elasticsearch-logging
  namespace: kube-system
  # namespace: kube-public
  labels:
    k8s-app: elasticsearch-logging
    version: v7.9.2
    kubernetes.io/cluster-service: "true"
spec:
  serviceName: elasticsearch-logging
  replicas: 1
  selector:
    matchLabels:
      # app: elasticsearch-logging
    k8s-app: elasticsearch-logging
    version: v7.9.2
  template:
    metadata:
      labels:
        # app: elasticsearch-logging
        k8s-app: elasticsearch-logging
        version: v7.9.2
        kubernetes.io/cluster-service: "true"
    spec:
      # serviceAccountName: elasticsearch-logging
      initContainers:
      - image: alpine:latest
        command: ["/sbin/sysctl", "-w", "vm.max_map_count=262144"]
        name: elasticsearch-logging-init
        securityContext:
          privileged: true      
      containers:
      - image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
        name: elasticsearch-logging
        # imagePullPolicy: Always
        resources:
          limits:
            cpu: 100m
          requests:
            cpu: 100m
        env:
          - name: "NAMESPACE"
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          # - name: "discovery.type"
          #   value: "single-node"
          # - name: ES_JAVA_OPTS
            # value: "-Xms9800m -Xmx9800m"
          # - name: HOSTNAME
          #   valueFrom:
          #     fieldRef:
          #       fieldPath: metadata.name
        ports:
        - containerPort: 9200
          name: restful
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        # readinessProbe:
        #     httpGet:
        #       scheme: HTTP
        #       path: /_cluster/health?local=true
        #       port: 9200
        #     initialDelaySeconds: 5
        volumeMounts:
        - name: elasticsearch-logging
          mountPath: /data
      volumes:
      - name: elasticsearch-logging
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-logging
  namespace: kube-system
  # namespace: kube-public
  labels:
    k8s-app: elasticsearch-logging
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: "Elasticsearch"
spec:
  ports:
  - port: 9200
    protocol: TCP
    targetPort: restful
    nodePort: 30092
  type: NodePort
  selector:
    k8s-app: elasticsearch-logging
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-logging-transport
spec:
  clusterIP: None
  selector:
    k8s-app: elasticsearch-logging
  ports:
    - port: 9300
      name: inner        